// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`minimal usage 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274cArtifactHash520AC40D": Object {
      "Description": "Artifact hash for asset \\"5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274c\\"",
      "Type": "String",
    },
    "AssetParameters5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274cS3BucketE87374DF": Object {
      "Description": "S3 bucket for asset \\"5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274c\\"",
      "Type": "String",
    },
    "AssetParameters5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274cS3VersionKey560E32AE": Object {
      "Description": "S3 key for asset version \\"5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274c\\"",
      "Type": "String",
    },
    "AssetParametersbb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713ArtifactHashC9E715A0": Object {
      "Description": "Artifact hash for asset \\"bb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713\\"",
      "Type": "String",
    },
    "AssetParametersbb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713S3BucketA6F21582": Object {
      "Description": "S3 bucket for asset \\"bb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713\\"",
      "Type": "String",
    },
    "AssetParametersbb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713S3VersionKey511845C2": Object {
      "Description": "S3 key for asset version \\"bb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713\\"",
      "Type": "String",
    },
    "AssetParameterscd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008fArtifactHash0B3242EC": Object {
      "Description": "Artifact hash for asset \\"cd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008f\\"",
      "Type": "String",
    },
    "AssetParameterscd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008fS3Bucket48A52042": Object {
      "Description": "S3 bucket for asset \\"cd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008f\\"",
      "Type": "String",
    },
    "AssetParameterscd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008fS3VersionKey54587D10": Object {
      "Description": "S3 key for asset version \\"cd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008f\\"",
      "Type": "String",
    },
    "AssetParametersd22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5ArtifactHash2FBDBB9C": Object {
      "Description": "Artifact hash for asset \\"d22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5\\"",
      "Type": "String",
    },
    "AssetParametersd22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5S3Bucket03316490": Object {
      "Description": "S3 bucket for asset \\"d22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5\\"",
      "Type": "String",
    },
    "AssetParametersd22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5S3VersionKey310E0CB1": Object {
      "Description": "S3 key for asset version \\"d22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5\\"",
      "Type": "String",
    },
    "AssetParametersd79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37ArtifactHashBB05A730": Object {
      "Description": "Artifact hash for asset \\"d79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37\\"",
      "Type": "String",
    },
    "AssetParametersd79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37S3Bucket500A7194": Object {
      "Description": "S3 bucket for asset \\"d79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37\\"",
      "Type": "String",
    },
    "AssetParametersd79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37S3VersionKey4B03D6FD": Object {
      "Description": "S3 key for asset version \\"d79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37\\"",
      "Type": "String",
    },
    "AssetParameterse0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847ArtifactHash909D7194": Object {
      "Description": "Artifact hash for asset \\"e0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847\\"",
      "Type": "String",
    },
    "AssetParameterse0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847S3Bucket2163AB27": Object {
      "Description": "S3 bucket for asset \\"e0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847\\"",
      "Type": "String",
    },
    "AssetParameterse0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847S3VersionKeyEF5016D0": Object {
      "Description": "S3 key for asset version \\"e0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ScheduleFunctionCreateScheduleFunction839A34E1": Object {
      "DependsOn": Array [
        "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersd79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37S3Bucket500A7194",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37S3VersionKey4B03D6FD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd79a804bce8f127163660717af12eb5990776c9e48fd68bb9cf32f1300f1fb37S3VersionKey4B03D6FD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "RECENT_MINUTES": "30",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
            "TARGET_FUNCTIONS_NAME": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"TestTarget\\":\\"",
                  Object {
                    "Ref": "TestTarget4042A7F7",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionDeleteScheduleFunctionC18DF41E": Object {
      "DependsOn": Array [
        "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersd22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5S3Bucket03316490",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5S3VersionKey310E0CB1",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersd22c623f1dc0f88c0f0b3553cc18a9fe0f246611c5f121a4b98c96467ebc78d5S3VersionKey310E0CB1",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionDispatchTargetFunction6A796318": Object {
      "DependsOn": Array [
        "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParametersbb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713S3BucketA6F21582",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713S3VersionKey511845C2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParametersbb9bb78d37cf717d2e222921872a4993e46b65592acd8c2e871d05490df09713S3VersionKey511845C2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
            "TARGET_FUNCTIONS_NAME": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"TestTarget\\":\\"",
                  Object {
                    "Ref": "TestTarget4042A7F7",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionDispatchTargetRuleAllowEventRuledemostackScheduleFunctionDispatchTargetFunction046F149B139F2B36": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDispatchTargetFunction6A796318",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDispatchTargetRuleE8DBE1C8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleFunctionDispatchTargetRuleE8DBE1C8": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ScheduleFunctionDispatchTargetFunction6A796318",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScheduleFunctionFetchScheduleFunctionD70172FC": Object {
      "DependsOn": Array [
        "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274cS3BucketE87374DF",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274cS3VersionKey560E32AE",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters5a68090c3f2da1fd2510ac20423ecc0c86a43cef5dbefaa3351a97ed899b274cS3VersionKey560E32AE",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionListScheduleFunction45B7EF79": Object {
      "DependsOn": Array [
        "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847S3Bucket2163AB27",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847S3VersionKeyEF5016D0",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse0c758dc83ef668f652beeec14c3e043bc5bc08a6c2778099127d3f6e5314847S3VersionKeyEF5016D0",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionScheduleTable60883DB8": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "scheduleId",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "scheduledAt",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "targetType",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "targetId",
            "AttributeType": "S",
          },
        ],
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "Query-By-ScheduledAt",
            "KeySchema": Array [
              Object {
                "AttributeName": "scheduledAt",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1,
            },
          },
          Object {
            "IndexName": "Query-By-TargetType",
            "KeySchema": Array [
              Object {
                "AttributeName": "targetType",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1,
            },
          },
          Object {
            "IndexName": "Query-By-TargetId",
            "KeySchema": Array [
              Object {
                "AttributeName": "targetId",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1,
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "scheduleId",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "ScheduleFunctionUpdateScheduleFunction2DA1CD25": Object {
      "DependsOn": Array [
        "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterscd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008fS3Bucket48A52042",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterscd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008fS3VersionKey54587D10",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterscd89e1300be585307edeb344db8b552975c364446f98c6ad82d742a8d473008fS3VersionKey54587D10",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctiondeleteschedulepolicy0E23AE84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctiondeleteschedulepolicy0E23AE84",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctiondispatchschedulepolicy7AE2621D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ScheduleFunctionScheduleTable60883DB8",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ScheduleFunctionScheduleTable60883DB8",
                          "Arn",
                        ],
                      },
                      "/index/Query-By-ScheduledAt",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTarget4042A7F7",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctiondispatchschedulepolicy7AE2621D",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionfetchschedulepolicy9B976A4F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionfetchschedulepolicy9B976A4F",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionlistschedulespolicy36680AA3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:Query",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionlistschedulespolicy36680AA3",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionputschedulepolicy9BCF4420": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:BatchWriteItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionputschedulepolicy9BCF4420",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionupdateschedulepolicy9AC28D81": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionupdateschedulepolicy9AC28D81",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTarget4042A7F7": Object {
      "DependsOn": Array [
        "TestTargetServiceRoleED06BFE8",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "
      export async function handler() {
        return {
          success: true,
          result: event.context,
        };
      }
    ",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestTargetServiceRoleED06BFE8",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestTargetServiceRoleED06BFE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
