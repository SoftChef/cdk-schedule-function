// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`minimal usage 1`] = `
Object {
  "Parameters": Object {
    "AssetParameters0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6ccArtifactHashE157FD6F": Object {
      "Description": "Artifact hash for asset \\"0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6cc\\"",
      "Type": "String",
    },
    "AssetParameters0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6ccS3Bucket374ED269": Object {
      "Description": "S3 bucket for asset \\"0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6cc\\"",
      "Type": "String",
    },
    "AssetParameters0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6ccS3VersionKeyF956B817": Object {
      "Description": "S3 key for asset version \\"0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6cc\\"",
      "Type": "String",
    },
    "AssetParameters1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9eArtifactHash761195AB": Object {
      "Description": "Artifact hash for asset \\"1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9e\\"",
      "Type": "String",
    },
    "AssetParameters1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9eS3BucketBF29E371": Object {
      "Description": "S3 bucket for asset \\"1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9e\\"",
      "Type": "String",
    },
    "AssetParameters1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9eS3VersionKey1B6953FD": Object {
      "Description": "S3 key for asset version \\"1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9e\\"",
      "Type": "String",
    },
    "AssetParameters42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dcArtifactHashED3F4559": Object {
      "Description": "Artifact hash for asset \\"42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dc\\"",
      "Type": "String",
    },
    "AssetParameters42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dcS3Bucket4165EC34": Object {
      "Description": "S3 bucket for asset \\"42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dc\\"",
      "Type": "String",
    },
    "AssetParameters42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dcS3VersionKeyD12AC4DD": Object {
      "Description": "S3 key for asset version \\"42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dc\\"",
      "Type": "String",
    },
    "AssetParameters678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50ArtifactHashB3E83EED": Object {
      "Description": "Artifact hash for asset \\"678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50\\"",
      "Type": "String",
    },
    "AssetParameters678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50S3BucketDCE88215": Object {
      "Description": "S3 bucket for asset \\"678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50\\"",
      "Type": "String",
    },
    "AssetParameters678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50S3VersionKey1E9410D2": Object {
      "Description": "S3 key for asset version \\"678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50\\"",
      "Type": "String",
    },
    "AssetParameterse41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1eArtifactHash8244328F": Object {
      "Description": "Artifact hash for asset \\"e41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1e\\"",
      "Type": "String",
    },
    "AssetParameterse41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1eS3Bucket6FB3807F": Object {
      "Description": "S3 bucket for asset \\"e41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1e\\"",
      "Type": "String",
    },
    "AssetParameterse41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1eS3VersionKey85F6D225": Object {
      "Description": "S3 key for asset version \\"e41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1e\\"",
      "Type": "String",
    },
    "AssetParameterse4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663cArtifactHash72BBDA52": Object {
      "Description": "Artifact hash for asset \\"e4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663c\\"",
      "Type": "String",
    },
    "AssetParameterse4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663cS3Bucket90062B7A": Object {
      "Description": "S3 bucket for asset \\"e4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663c\\"",
      "Type": "String",
    },
    "AssetParameterse4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663cS3VersionKeyD90F90D2": Object {
      "Description": "S3 key for asset version \\"e4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663c\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "ScheduleFunctionCreateScheduleFunction839A34E1": Object {
      "DependsOn": Array [
        "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50S3BucketDCE88215",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50S3VersionKey1E9410D2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters678af8edb1d99a0aca05d4be5cd7879ad54481e7a9ac66b087b34e77297aca50S3VersionKey1E9410D2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "RECENT_MINUTES": "30",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
            "TARGET_FUNCTIONS_NAME": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"TestTarget\\":\\"",
                  Object {
                    "Ref": "TestTarget4042A7F7",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionDeleteScheduleFunctionC18DF41E": Object {
      "DependsOn": Array [
        "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dcS3Bucket4165EC34",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dcS3VersionKeyD12AC4DD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters42c46ab7441d2a6487b77e2032424964605e5ff582d89cf252fc8a7b60b4f6dcS3VersionKeyD12AC4DD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionDispatchTargetFunction6A796318": Object {
      "DependsOn": Array [
        "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6ccS3Bucket374ED269",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6ccS3VersionKeyF956B817",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters0e77f1c0a17305ff6516cb6f97d5272a85c771bd1d15ce37e2a1987e3cafa6ccS3VersionKeyF956B817",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
            "TARGET_FUNCTIONS_NAME": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "{\\"TestTarget\\":\\"",
                  Object {
                    "Ref": "TestTarget4042A7F7",
                  },
                  "\\"}",
                ],
              ],
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionDispatchTargetRuleAllowEventRuledemostackScheduleFunctionDispatchTargetFunction046F149B139F2B36": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDispatchTargetFunction6A796318",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionDispatchTargetRuleE8DBE1C8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "ScheduleFunctionDispatchTargetRuleE8DBE1C8": Object {
      "Properties": Object {
        "ScheduleExpression": "rate(1 minute)",
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "ScheduleFunctionDispatchTargetFunction6A796318",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "ScheduleFunctionFetchScheduleFunctionD70172FC": Object {
      "DependsOn": Array [
        "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1eS3Bucket6FB3807F",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1eS3VersionKey85F6D225",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse41e756ba08d5cbe9c9b18164308b797e0df5bd3e608a23c3b776f81af53bd1eS3VersionKey85F6D225",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionListScheduleFunction45B7EF79": Object {
      "DependsOn": Array [
        "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameters1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9eS3BucketBF29E371",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9eS3VersionKey1B6953FD",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameters1b8c92b394b619af82f35b99a67092eece0febf20a6f535c0552f663cadd0a9eS3VersionKey1B6953FD",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctionScheduleTable60883DB8": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "scheduleId",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "scheduledAt",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "targetType",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "targetId",
            "AttributeType": "S",
          },
        ],
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "Query-By-ScheduledAt",
            "KeySchema": Array [
              Object {
                "AttributeName": "scheduledAt",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1,
            },
          },
          Object {
            "IndexName": "Query-By-TargetType",
            "KeySchema": Array [
              Object {
                "AttributeName": "targetType",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1,
            },
          },
          Object {
            "IndexName": "Query-By-TargetId",
            "KeySchema": Array [
              Object {
                "AttributeName": "targetId",
                "KeyType": "HASH",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
            "ProvisionedThroughput": Object {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1,
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "scheduleId",
            "KeyType": "HASH",
          },
        ],
        "ProvisionedThroughput": Object {
          "ReadCapacityUnits": 1,
          "WriteCapacityUnits": 1,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Retain",
    },
    "ScheduleFunctionUpdateScheduleFunction2DA1CD25": Object {
      "DependsOn": Array [
        "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Ref": "AssetParameterse4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663cS3Bucket90062B7A",
          },
          "S3Key": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Fn::Select": Array [
                    0,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663cS3VersionKeyD90F90D2",
                        },
                      ],
                    },
                  ],
                },
                Object {
                  "Fn::Select": Array [
                    1,
                    Object {
                      "Fn::Split": Array [
                        "||",
                        Object {
                          "Ref": "AssetParameterse4af6b2831fdc16950c95368e348b7e64a364fedeb4849791a5b8c9b6611663cS3VersionKeyD90F90D2",
                        },
                      ],
                    },
                  ],
                },
              ],
            ],
          },
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "SCHEDULE_TABLE_NAME": Object {
              "Ref": "ScheduleFunctionScheduleTable60883DB8",
            },
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ScheduleFunctiondeleteschedulepolicy0E23AE84": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctiondeleteschedulepolicy0E23AE84",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionDeleteScheduleFunctionServiceRoleE5D76AB9",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctiondispatchschedulepolicy7AE2621D": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "ScheduleFunctionScheduleTable60883DB8",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "ScheduleFunctionScheduleTable60883DB8",
                          "Arn",
                        ],
                      },
                      "/index/Query-By-ScheduledAt",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "TestTarget4042A7F7",
                    "Arn",
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctiondispatchschedulepolicy7AE2621D",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionDispatchTargetFunctionServiceRole89FC967C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionfetchschedulepolicy9B976A4F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:GetItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionfetchschedulepolicy9B976A4F",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionFetchScheduleFunctionServiceRole0891609B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionlistschedulespolicy36680AA3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:Query",
                "dynamodb:Scan",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionlistschedulespolicy36680AA3",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionListScheduleFunctionServiceRole5EA5341C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionputschedulepolicy9BCF4420": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "dynamodb:BatchWriteItem",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionputschedulepolicy9BCF4420",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionCreateScheduleFunctionServiceRole5CB97B76",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "ScheduleFunctionupdateschedulepolicy9AC28D81": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "ScheduleFunctionScheduleTable60883DB8",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "ScheduleFunctionupdateschedulepolicy9AC28D81",
        "Roles": Array [
          Object {
            "Ref": "ScheduleFunctionUpdateScheduleFunctionServiceRoleCAC6BD24",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "TestTarget4042A7F7": Object {
      "DependsOn": Array [
        "TestTargetServiceRoleED06BFE8",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "
      export async function handler() {
        return {
          success: true,
          result: event.context,
        };
      }
    ",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "TestTargetServiceRoleED06BFE8",
            "Arn",
          ],
        },
        "Runtime": "nodejs12.x",
      },
      "Type": "AWS::Lambda::Function",
    },
    "TestTargetServiceRoleED06BFE8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
}
`;
